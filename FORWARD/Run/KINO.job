#! /bin/sh -
#
#PBS -S /bin/sh
#
# Give the job a name
#PBS -N "KINO"
#
# Specify the project the job should be accounted on
#PBS -A imr
#
# The job needs at most HHH hours wall-clock time on NNN CPUs
#PBS -l mppwidth=512,mppnppn=32,walltime=420:30:00
#
# The job needs mppmem MB memory per cpu:
#PBS -l mppmem=1000mb
#
# Send me an email on a=abort, b=begin, e=end
#PBS -m abe
#
# Use this email address:
#PBS -M trondk@imr.no
#
# Write the standard output of the job to file 'mpijob.out'
#PBS -o /work/users/trondk/KINO/FORWARD/Run/KINO.out
#
# Write the standard error of the job to file 'mpijob.err'
#PBS -e /work/users/trondk/KINO/FORWARD/Run/KINO.err
#
# Do not restart crashed jobs
#PBS -r n
#
set -x
#
# Set paths
BASE=/work/users/trondk/KINO/FORWARD/Run
RUNDIR=${BASE}
#
# Make sure I am in the correct directory
cd ${BASE}
#
# Hexagon specific
export MPI_COLL_OPT_ON
export MPICH_FAST_MEMCPY=1
export MALLOC_MMAP_MAX_=0
export MALLOC_TRIM_THRESHOLD_=536870912
export MPICH_MAX_VSHORT_MSG_SIZE=4096
export MPICH_VSHORT_BUFFERS=256
export MPICH_MSGS_PER_PROC=65536
export MPICH_RANK_REORDER_METHOD=1
ulimit -s unlimited
ulimit -c unlimited
#
# Set enough memory
export MPICH_UNEX_BUFFER_SIZE=900000000
export MPICH_PTL_UNEX_EVENTS=200000
#
##########################################################################
#   Execute ROMS on hexagon:
#
aprun -n 512 -N 32 -m 1000M ./oceanM ./ocean.in
#
##########################################################################
# Open for read access
chmod a+r ${RUNDIR}/*
#
# Return output at end to mpirun as exit status:
exit $?
#
